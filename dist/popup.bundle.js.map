{"version":3,"file":"popup.bundle.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://power-up_extension/./src/popup/popup.js"],"sourcesContent":["console.log(\"Popup script loaded\");\r\n\r\n// Initialize theme\r\nfunction initializeTheme() {\r\n    chrome.storage.sync.get('theme', function(data) {\r\n        if (data.theme) {\r\n            document.body.setAttribute('data-theme', data.theme);\r\n        }\r\n    });\r\n}\r\n\r\n// Initialize theme when popup loads\r\ndocument.addEventListener('DOMContentLoaded', initializeTheme);\r\n\r\n// Listen for theme changes\r\nchrome.storage.onChanged.addListener(function(changes, namespace) {\r\n    if (changes.theme) {\r\n        document.body.setAttribute('data-theme', changes.theme.newValue);\r\n    }\r\n});\r\n\r\nchrome.runtime.onMessage.addListener(\r\n    function(request, sender, sendResponse) {\r\n        chrome.runtime.sendMessage({ action: \"popupReady\" }, function(response) {\r\n            console.log(\"Popup script - Popup ready message sent to background script\");\r\n        });\r\n        if (request.action === \"setPostContent\") {\r\n            console.log(\"Popup script - Received posts:\", request.postContent);\r\n            const posts = request.postContent;\r\n\r\n            document.body.innerHTML = '<h1>LinkedIn Enhancer</h1><p>This is the popup.</p>';\r\n\r\n            if (Array.isArray(posts)) {\r\n                posts.forEach(post => {\r\n                    const postDiv = document.createElement('div');\r\n                    postDiv.innerHTML = `<h3>${post.posterName}</h3>${post.postContent}`;\r\n                    postDiv.style.padding = '10px';\r\n                    postDiv.style.border = '1px solid var(--border-color)';\r\n                    postDiv.style.margin = '10px';\r\n                    postDiv.style.whiteSpace = 'pre-line';\r\n                    document.body.appendChild(postDiv);\r\n                });\r\n            } else {\r\n                const contentDiv = document.createElement('div')\r\n                contentDiv.textContent = \"Could not retrieve post content.\";\r\n                document.body.appendChild(contentDiv)\r\n            }\r\n        }\r\n    }\r\n);\r\n"],"names":[],"sourceRoot":""}